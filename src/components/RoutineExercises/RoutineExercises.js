import "./RoutineExercises.scss";
import ExerciseCard from "../ExerciseCard.js/ExerciseCard";
import axios from "axios";
import { useEffect, useState } from "react";
import NewExerciseCard from "../NewExerciseCard/NewExerciseCard";
import { Link } from "react-router-dom";

const RoutineExercises = ({ routineId }) => {
  const [routineDetails, setRoutineDetails] = useState(null);
  const [exerciseCounter, setExerciseCounter] = useState(0);
  const [routineName, setRoutineName] = useState("");
  //   const [exercises, setExercises] = useState([]);
//   exercise state
  const [formBody, setFormBody] = useState({
    name: "Upper Body",
    exercises: [
      {
        exercise_name: "Bicep Curl",
        sets: [
          {
            weight: 10,
            reps: 12,
            volume: 120,
          },
          {
            weight: 10,
            reps: 12,
            volume: 120,
          },
          {
            weight: 10,
            reps: 12,
            volume: 120,
          },
        ],
      },
      {
        exercise_name: "Lat Pull Down",
        sets: [
          {
            weight: 23,
            reps: 12,
            volume: 276,
          },
          {
            weight: 23,
            reps: 12,
            volume: 276,
          },
          {
            weight: 25,
            reps: 10,
            volume: 276,
          },
        ],
      },
    ],
  });

  const handleAddExerciseClick = () => {
    setExerciseCounter(exerciseCounter + 1);
  };

  const getRoutineDetails = async () => {
    try {
      const response = await axios.get(
        process.env.REACT_APP_API_URL + `/user/1/routine/${routineId}/exercises`
      );
      setRoutineDetails(response.data);
      setRoutineName(response.data.name);
      //   setExercises(response.data.exercises)
    } catch (err) {
        console.log(`Error: ${err.message}`);
    }
};

useEffect(() => {
  setFormBody({ ...formBody, name: routineName });
}, [routineName]);

  useEffect(() => {
    getRoutineDetails();
  }, []);

  if (!routineDetails) {
    return <h1 className="loading">Data Loading</h1>;
  }

  // Handle input values
  const handleRoutineNameChange = (e) => {
    setRoutineName(e.target.value);
    // console.log({...formBody.name});
  };




  const { exercises } = routineDetails;

  // Handle submission
  // Possible req.body
  // {
  //     "name": "Upper Body",
  //     "exercises": [
  //         {
  //             "exercise_name": "Bicep Curl",
  //             "sets": [
  //                 {
  //                     "weight": 10,
  //                     "reps": 12,
  //                     "volume": 120 (will be autogenerated by the table? I assumed... )
  //                 },
  //                 {
  //                     "weight": 10,
  //                     "reps": 12,
  //                     "volume": 120
  //                 },
  //                 {
  //                     "weight": 10,
  //                     "reps": 12,
  //                     "volume": 120
  //                 }
  //             ]
  //         },
  //         {
  //             "exercise_name": "Lat Pull Down",
  //             "sets": [
  //                 {
  //                     "weight": 23,
  //                     "reps": 12,
  //                     "volume": 276
  //                 },
  //                 {
  //                     "weight": 23,
  //                     "reps": 12,
  //                     "volume": 276
  //                 },
  //                 {
  //                     "weight": 25,
  //                     "reps": 10,
  //                     "volume": 276
  //                 }
  //             ]
  //         }
  //     ]
  // }
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(e.target.name.value);
    // TODO: some validation or manipulation for empty fields
    // TODO: construct the req.body that's going to be posted
    // HOWTO: set up states for the card components: empty arrays?
    // TODO: axios.post
    // TODO: popup and navigate back to the routine page
  };

  return (
    <section className="training">
      <form className="training__form" onSubmit={handleSubmit}>
        <div className="training__title-container">
          <input
            className="training__title"
            type="text"
            id="title"
            name="title"
            onChange={handleRoutineNameChange}
            value={routineName}
          />
          <h3 onClick={handleAddExerciseClick} className="training__add">
            + EXERCISE
          </h3>
        </div>
        <div className="training__body-container">
          {exercises.map((exercise, index) => (
            // passed down the onChange handler here?
            <ExerciseCard key={index} exercise={exercise} />
          ))}
          {Array.from(Array(exerciseCounter).keys()).map((count, index) => (
            <NewExerciseCard key={index} />
          ))}
          <button
            className="training__btn training__btn--complete"
            type="submit"
          >
            SMASHED
          </button>
          <Link
            to="/routines"
            className="training__btn training__btn--cancel"
            type="submit"
          >
            CANCEL
          </Link>
        </div>
      </form>
    </section>
  );
};

export default RoutineExercises;
